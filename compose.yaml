services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app:delegated
    working_dir: /app
    ports:
      - "8000:8000"
    networks:
      - app_network
    command: php -S 0.0.0.0:8000 -t public
    tty: true
    stdin_open: true
    depends_on:
      database:
        condition: service_healthy
      mongodb:
        condition: service_healthy

  database:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql  
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: database
    networks:
      - app_network
    depends_on:
      - database

  mongodb:
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app_network
    command: mongod --bind_ip_all
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
    networks:
      - app_network
    depends_on:
      mongodb:
        condition: service_healthy

  mailer:
    image: axllent/mailpit
    ports:
      - "1025:1025"
      - "8025:8025"
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data: 
  mongodb_data: